// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPICasino;

#nullable disable

namespace WebAPICasino.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("WebAPICasino.Entidades.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("WebAPICasino.Entidades.Rifa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero20")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero21")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero22")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero23")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero24")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero25")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero26")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero27")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero28")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero29")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero30")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero31")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero32")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero33")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero34")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero35")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero36")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero37")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero38")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero39")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero40")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero41")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero42")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero43")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero44")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero45")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero46")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero47")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero48")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero49")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero50")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero51")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero52")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero53")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero54")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero9")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rifas");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
